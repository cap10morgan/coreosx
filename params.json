{"name":"CoreOSX","tagline":"Simple installation of a CoreOS dev environment on Mac OS X","body":"coreosx\r\n=======\r\n\r\n## Installation\r\n\r\nCoreOS on OS X in three steps:\r\n\r\n1. Install [VirtualBox](https://www.virtualbox.org/wiki/Downloads) and [Vagrant](http://www.vagrantup.com/downloads.html).\r\n\r\n2. Put the `coreosx` script somewhere on your path:\r\n\r\n        curl https://raw.githubusercontent.com/cap10morgan/coreosx/v1.0.1/coreosx > /usr/local/bin/coreosx\r\n        chmod +x /usr/local/bin/coreosx\r\n\r\n3. Run:\r\n\r\n        coreosx shell\r\n        docker version (or etcdctl ls or fleetctl list-machines)\r\n\r\n\r\nThis script acts as both an installer and as Virtual machine manager. On first run, it installs and starts a CoreOS virtual machine. It forwards ports 4001 and 7001 from the host's localhost interface to the VM for etcd clients to connect to. It also (optionally) adds an entry to /etc/hosts called `localcoreos` for accessing exposed ports from Docker containers, for example.\r\n\r\nThe virtual machine that Docker runs on is given the hostname `localcoreos`. For example, if you run `docker run -p 8000:8000 ...`, then that will be available at `localcoreos:8000` from OS X.\r\n\r\n## After Installation\r\n\r\nInstead of running `coreosx shell` all the time, it's much more convenient to\r\nadd this to your shell's init file (~/.profile or similar):\r\n\r\n    eval `coreosx env`\r\n\r\nIf you don't have them already, you'll probably want to install the docker client, etcdctl, and fleetctl\r\non your OS X host. The simplest way to do that is to use [Homebrew](http://brew.sh):\r\n\r\n    brew install docker\r\n    brew install etcdctl\r\n    brew install fleetctl\r\n\r\nOnce installed, they should Just Work as long as your CoreOS VM is running and you have eval'd `coreosx env`\r\nin your shell (or run `coreosx shell` first).\r\n\r\n## Additional commands\r\n\r\n`coreosx` provide additional commands as shortcuts for controlling the Vagrant VM:\r\n\r\n### coreosx start\r\n\r\nStart the local Virtual Machine\r\n\r\n### coreosx ssh\r\n\r\nOpen a console on the Vagrant virtual machine.\r\n\r\n### coreosx destroy\r\n\r\nDestroy the local Virtual Machine\r\n\r\n### coreosx halt\r\n\r\nStop the Vagrant VM. You'll probably want to do this after you've finished working with CoreOS to save RAM.\r\n\r\n### coreosx shell\r\n\r\nStart the virtual machine and open a shell with DOCKER_HOST environment variable configured.\r\n\r\n\r\n## Override defaults\r\n\r\nThe coreosx script has several options that can be overridden by adding a\r\nnew file `$HOME/.coreosx/defaults`. When coreosx starts the VM, it will\r\nsource this file.\r\n\r\nWhen modifying the defaults for coreosx, currently, it is best to destroy\r\nany already-created VM and configure a new one with the changes.\r\n\r\nAn example `defaults` file follows:\r\n\r\n```bash\r\n# $HOME/.coreosx/defaults\r\nCOREOS_IP=192.168.228.10\r\n```\r\n\r\n### COREOS_IP\r\n\r\nThe IP that the docker host will be mapped to on your machine.\r\n\r\nDefault: `172.16.23.75`\r\n\r\n### COREOS_DOMAIN\r\n\r\nThe domain name added to `/etc/hosts`, pointing at the `COREOS_IP`.\r\n\r\nDefault: `localcoreos`\r\n\r\n### DOCKER_PORT\r\n\r\nThe port that docker will be listening on.\r\n\r\nDefault: `2375`\r\n\r\n### COREOS_CHANNEL\r\n\r\nThe initial version of CoreOS will be installed from this release and updates will come from it afterwards.\r\n\r\nDefault: `alpha`\r\n\r\n### VAGRANT_BOX_URL\r\n\r\nThe URL used to download the vagrant box.\r\n\r\nDefault: `http://${COREOS_CHANNEL}.release.core-os.net/amd64-usr/current/coreos_production_vagrant.json`\r\n\r\n## Contributors\r\n\r\n* [Wes Morgan](https://github.com/cap10morgan) - CoreOSX author\r\n* [Julien Duponchelle](https://github.com/noplay/) – Original author of docker-osx, which this is adapted from\r\n* [Ben Firshman](https://github.com/bfirsh) – Faster and simpler installation of docker-osx with Vagrant image and pre-built binary\r\n\r\n## Licence\r\n\r\nCopyright 2014 Wes Morgan\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}